html,
section,
div {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html,
body,
header,
section,
h1,
p {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: 'Lato', sans-serif;
    font-weight: 300;
    font-size: 23px;
    text-align: center;
}

body {
    background: #ffffff url('../img/geometry2.png');
    /* Background pattern from Subtle Patterns */
    font-family: 'Coda', cursive;
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}


/*
 * Styles for the deck of cards
 */

.deck {
    width: 660px;
    min-height: 680px;
    background: linear-gradient(160deg, #02ccba 0%, #aa7ecd 100%);
    padding: 32px;
    border-radius: 10px;
    box-shadow: 12px 15px 20px 0 rgba(46, 61, 73, 0.5);
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    margin: 0 0 3em;
}

.deck .card {
    height: 125px;
    width: 125px;
    background: #2e3d49;
    font-size: 0;
    color: #ffffff;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
}

.deck .card.disable {
    pointer-events: none;
}

.deck .card.open {
    background: #02b3e4;
    cursor: default;
}

.deck .card.show {
    font-size: 33px;
}

.deck .card.match {
    cursor: default;
    background: #02ccba;
    font-size: 33px;
    animation-name: itsAMatch;
    -webkit-backface-visibility: visible !important;
    backface-visibility: visible !important;
    animation-duration: .75s;
}

.deck .card.wrong {
    background-color: #dc143c;
    cursor: default;
    transform-style: preserve-3d;
    transition: .4s ease-in-out;
    animation-name: itsNotAMatch;
    -webkit-backface-visibility: visible !important;
    backface-visibility: visible !important;
    animation-duration: .75s;
}

.deck .card.closed {
    height: 125px;
    width: 125px;
    background: #2e3d49;
    font-size: 0;
    color: #ffffff;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
    transform-style: preserve-3d;
    transition: .4s ease-in-out;
}


/*
 * Styles for the Score Panel
 */

.panel {
    text-align: center;
    width: 500px;
    margin-bottom: 40px;
}

.score-panel .stars {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin: 0 5px 0 0;
}

.score-panel .stars li {
    list-style: none;
    display: inline-block;
}

.restart {
    display: inline-block;
    cursor: pointer;
    min-width: 48px;
    min-height: 48px;
}

.score-panel .stars li .none {
    display: none;
}

.timer {
    padding: 20px;
}


/*
 * Styles for modal
 */

#overlay {
    visibility: hidden;
    position: absolute;
    left: 0px;
    top: 0px;
    width: 100%;
    height: 100%;
    text-align: center;
    z-index: 1000;
}

#overlay div {
    width: 300px;
    margin: 100px auto;
    background-color: #02ccba;
    border: 1px solid #000;
    padding: 15px;
    text-align: center;
}

button {
    background: white;
    border: none;
    color: black;
    padding: 1px 12px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 20px;
    border-radius: 4px;
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

a {
    text-decoration: none;
    color: black;
}


/*
 * Resposiveness
 */

@media screen and (min-width: 360px) {
    .container {
        width: 100%;
        display: flex;
    }
    .deck {
        width: 70%;
    }
    html,
    body,
    header,
    section,
    h1 {
        font-size: 40px;
    }
}

@media screen and (min-width: 768px) {
    .deck {
        width: 70%;
    }
}

@media screen and (min-width: 850px) {
    .deck {
        width: 660px;
    }
    html,
    body,
    header,
    section,
    h1 {
        font-size: 30px;
    }
}


/* 
  * animations
  */

@keyframes itsNotAMatch {
    from {
        transform: scale3d(1, 1, 1);
    }
    30% {
        transform: scale3d(1.25, 0.75, 1);
    }
    40% {
        transform: scale3d(0.75, 1.25, 1);
    }
    50% {
        transform: scale3d(1.15, 0.85, 1);
    }
    65% {
        transform: scale3d(.95, 1.05, 1);
    }
    75% {
        transform: scale3d(1.05, .95, 1);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}

@keyframes itsAMatch {
    from {
        transform: scale3d(1, 1, 1);
    }
    50% {
        transform: scale3d(1.2, 1.2, 1.2);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}